function SpaceShip.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 256
pop this 0
push constant 255
pop this 1
push constant 30
pop this 2
push constant 4
pop this 3
push constant 20
pop this 4
push pointer 0
call SpaceShip.draw 1
pop temp 0
push pointer 0
return
function SpaceShip.x 0
push argument 0
pop pointer 0
push this 0
return
function SpaceShip.y 0
push argument 0
pop pointer 0
push this 1
push this 2
sub
return
function SpaceShip.draw 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 3
sub
push this 1
push this 2
sub
push this 0
push this 3
add
push this 1
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
push constant 8
add
sub
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push this 0
push this 3
push constant 6
add
sub
push this 1
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
push constant 8
add
sub
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push this 0
push this 3
push constant 6
add
sub
push this 1
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
add
push constant 6
add
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push this 0
push this 3
add
push constant 8
add
push this 1
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
sub
push this 1
push this 0
push this 1
push this 4
sub
call Screen.drawLine 4
pop temp 0
push this 0
push this 4
sub
push this 1
push this 0
push this 1
push this 4
sub
push constant 15
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 4
add
push this 1
push this 0
push this 1
push this 4
sub
call Screen.drawLine 4
pop temp 0
push this 0
push this 4
add
push this 1
push this 0
push this 1
push this 4
sub
push constant 15
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function SpaceShip.eraseOld 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 3
sub
push this 1
push this 2
sub
push argument 1
push this 3
add
push this 1
call Screen.drawRectangle 4
pop temp 0
push argument 1
push this 3
push constant 8
add
sub
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push argument 1
push this 3
push constant 6
add
sub
push this 1
call Screen.drawRectangle 4
pop temp 0
push argument 1
push this 3
add
push constant 6
add
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push argument 1
push this 3
add
push constant 8
add
push this 1
call Screen.drawRectangle 4
pop temp 0
push argument 1
push this 4
sub
push this 1
push argument 1
push this 1
push this 4
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push this 4
sub
push this 1
push argument 1
push this 1
push this 4
sub
push constant 15
add
call Screen.drawLine 4
pop temp 0
push argument 1
push this 4
add
push this 1
push argument 1
push this 1
push this 4
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push this 4
add
push this 1
push argument 1
push this 1
push this 4
sub
push constant 15
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function SpaceShip.moveLeft 1
push argument 0
pop pointer 0
push this 0
pop local 0
push this 0
push this 4
sub
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 1
sub
push this 4
sub
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
pop this 0
goto IF_END1
label IF_FALSE1
push this 0
push constant 1
sub
pop this 0
label IF_END1
push pointer 0
push local 0
call SpaceShip.eraseOld 2
pop temp 0
push pointer 0
call SpaceShip.draw 1
pop temp 0
push constant 0
return
function SpaceShip.moveRight 1
push argument 0
pop pointer 0
push this 0
pop local 0
push this 0
push this 4
add
push constant 511
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 1
add
push this 4
add
push constant 511
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 511
push this 4
sub
pop this 0
goto IF_END1
label IF_FALSE1
push this 0
push constant 1
add
pop this 0
label IF_END1
push pointer 0
push local 0
call SpaceShip.eraseOld 2
pop temp 0
push pointer 0
call SpaceShip.draw 1
pop temp 0
push constant 0
return
function SpaceShip.shoot 0
push argument 0
pop pointer 0
push this 0
push this 1
push constant 4
sub
call Missile.new 2
return
function SpaceShip.dispose 0
push argument 0
pop pointer 0
push pointer 0
push this 0
call SpaceShip.eraseOld 2
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
