function MissilesController.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 8
pop this 1
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label START_WHILE0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
push local 0
push this 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto START_WHILE0
label WHILE_END0
push constant 0
pop this 2
push pointer 0
return
function MissilesController.length 0
push argument 0
pop pointer 0
push this 1
return
function MissilesController.shoot 3
push argument 0
pop pointer 0
push this 2
push constant 1
sub
pop local 2
push local 2
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 1
sub
pop local 2
label IF_FALSE1
push local 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Missile.y 1
pop local 1
push local 1
push constant 220
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
return
label IF_FALSE3
label IF_FALSE2
push this 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Missile.dispose 1
pop temp 0
label IF_FALSE4
push argument 1
call SpaceShip.shoot 1
push this 2
push this 0
add
pop pointer 1
pop that 0
push this 2
push constant 1
add
pop this 2
push this 2
push this 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
pop this 2
label IF_FALSE5
push pointer 0
return
function MissilesController.moveMissiles 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label START_WHILE6
push local 0
push this 1
lt
not
if-goto WHILE_END6
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Missile.move 1
pop temp 0
push local 1
call Missile.y 1
push constant 3
sub
push constant 0
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 1
call Missile.dispose 1
pop temp 0
push constant 0
push local 0
push this 0
add
pop pointer 1
pop that 0
label IF_FALSE8
label IF_FALSE7
push local 0
push constant 1
add
pop local 0
goto START_WHILE6
label WHILE_END6
push pointer 0
return
function MissilesController.at 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
return
label IF_FALSE9
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function MissilesController.remove 1
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Missile.dispose 1
pop temp 0
push constant 0
push argument 1
push this 0
add
pop pointer 1
pop that 0
push pointer 0
return
function MissilesController.clear 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label START_WHILE10
push local 0
push this 1
lt
not
if-goto WHILE_END10
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
push local 0
call MissilesController.remove 2
pop temp 0
label IF_FALSE11
push local 0
push constant 1
add
pop local 0
goto START_WHILE10
label WHILE_END10
push constant 0
pop this 2
push pointer 0
return
function MissilesController.dispose 0
push argument 0
pop pointer 0
push pointer 0
call MissilesController.clear 1
pop temp 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push pointer 0
return
