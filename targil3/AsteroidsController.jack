/**
Math.abs
Math.multiply
Math.divide
Math.min
Math.max
Math.sqrt

String.new
String.dispose
String.length
String.charAt
String.setCharAt
String.appendChar
String.eraseLastChar
String.intValue
String.setInt
String.backSpace
String.doubleQuote
String.newLine

Array.new
Array.dispose

Output.moveCursor
Output.printChar
Output.printString
Output.printInt
Output.println
Output.backSpace

Screen.clearScreen
Screen.setColor
Screen.drawPixel
Screen.drawLine
Screen.drawRectangle
Screen.drawCircle

Sys.halt
Sys.error
Sys.wait

Memory.peek
Memory.poke
Memory.alloc
Memory.deAlloc

Keyboard.keyPressed
Keyboard.readChar
Keyboard.readLine
Keyboard.readInt

field var let static
constructor method function
int boolean char void
let do if else while return
true false null this
*/
class AsteroidsController {
    field Array asteroidArr;
    field int asteroidArrLength, asteroidArrPtr;
    
    constructor AsteroidsController new () {
        let asteroidArrLength = 8;

        let asteroidArr=Array.new(asteroidArrLength);
        let asteroidArrPtr = 0;

        return this;
    }

    method void newAsteroid(int chance) {
        var int Xrandom;
        var int sizeRandom;
        var int directionXRandom;
        var int speedRandom;
        var Asteroid astroid;

        if (chance < 9950) {
            return;
        }

        let astroid = asteroidArr[asteroidArrPtr];
        if (astroid = null) {
            let sizeRandom=Random.between(8, 20);
            let directionXRandom=Random.between(-2, 2);
            let Xrandom = Random.between(sizeRandom + 6, 505 - sizeRandom);
            let speedRandom = Random.between(1, 10);

            let asteroidArr[asteroidArrPtr] = Asteroid.new(Xrandom, sizeRandom, sizeRandom,directionXRandom, speedRandom);
            let asteroidArrPtr = asteroidArrPtr+1;
            if (asteroidArrPtr = asteroidArrLength) {
                let asteroidArrPtr=0;
            }
        }
        return;
    }

    method void moveAsteroids () {
        var int i;
        var Asteroid _asteroid;
        let i = 0;
        while( i < asteroidArrLength ){
            if(~(asteroidArr[i] = null)){
                let _asteroid = asteroidArr[i];
                do _asteroid.move();
                if(_asteroid.end()){
                    do _asteroid.dispose();
                    let asteroidArr[i] = null;
                }
            }
            let i = i + 1;
        }
        return;
    }

    method boolean hit(int x, int y){
        var int i;
        var Asteroid _asteroid;
        let i = 0;
        while (i < asteroidArrLength) {
            if (~(asteroidArr[i] = null)){
                let _asteroid = asteroidArr[i];
                if(_asteroid.hit(x, y)){
                    do _asteroid.dispose();
                    let asteroidArr[i] = null;
                    return true;
                }
            }
            let i = i + 1;
        }
        return false;
    }
}