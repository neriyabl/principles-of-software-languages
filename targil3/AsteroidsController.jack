/**
  Neriya Bar-lev  313366676
  Netanel Avraham 207544131
*/
class AsteroidsController {
    //--------- fields -----------
    field Array asteroidArr;
    field int asteroidArrLength, asteroidArrPtr;
    
    //---------- constructor ----------
    constructor AsteroidsController new () {
        var int i;
        let asteroidArrLength = 8;
        let asteroidArr=Array.new(asteroidArrLength);
        let i = 0;
        while (i < asteroidArrLength) {
            let asteroidArr[i] = null;
            let i = i + 1;
        }
        let asteroidArrPtr = 0;
        return this;
    }

    //---------- methods ---------

    /*
    create new  asteroid in 0.01%
    */
    method void newAsteroid(int chance) {
        var int Xrandom;
        var int sizeRandom;
        var int directionXRandom;
        var int speedRandom;
        var Asteroid astroid;

        if (chance < 990) {
            return;
        }

        let astroid = asteroidArr[asteroidArrPtr];
        if (astroid = null) {
            let sizeRandom=Random.between(8, 20);
            let directionXRandom=Random.between(-2, 2);
            let Xrandom = Random.between(sizeRandom + 6, 505 - sizeRandom);
            let speedRandom = Random.between(1, 10);

            let asteroidArr[asteroidArrPtr] = Asteroid.new(Xrandom, sizeRandom, sizeRandom,directionXRandom, speedRandom);
            let asteroidArrPtr = asteroidArrPtr+1;
            if (asteroidArrPtr = asteroidArrLength) {
                let asteroidArrPtr=0;
            }
        }
        return;
    }

    /*
    move all the asteroids
    */
    method void moveAsteroids () {
        var int i;
        var Asteroid _asteroid;
        let i = 0;
        while( i < asteroidArrLength ){
            if(~(asteroidArr[i] = null)){
                let _asteroid = asteroidArr[i];
                do _asteroid.move();
                if(_asteroid.end()){
                    do _asteroid.dispose();
                    let asteroidArr[i] = null;
                }
            }
            let i = i + 1;
        }
        return;
    }

    /*
    check if some asteroid is hit 
    if yes remove the asteroid and return true
    */
    method boolean hit(int x, int y){
        var int i;
        var Asteroid _asteroid;
        let i = 0;
        while (i < asteroidArrLength) {
            if (~(asteroidArr[i] = null)){
                let _asteroid = asteroidArr[i];
                if(_asteroid.hit(x, y)){
                    do _asteroid.dispose();
                    let asteroidArr[i] = null;
                    return true;
                }
            }
            let i = i + 1;
        }
        return false;
    }

    /*
    remove all the asteroids from the array
    */
    method void clear () {
        var int i;
        var Asteroid _asteroid;
        let i = 0;
        while (i < asteroidArrLength) {
            if (~(asteroidArr[i] = null)){
                let _asteroid = asteroidArr[i];
                do _asteroid.dispose();
                let asteroidArr[i] = null;
            }
            let i = i + 1;
        }
        let asteroidArrPtr = 0;
        return;
    }

    /*
    clear all and dispose array and memory
    */
    method void dispose () {
        do clear();
        do asteroidArr.dispose();
        do Memory.deAlloc(this);
        return;
    }
}