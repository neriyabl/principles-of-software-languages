/**
  Neriya Bar-lev  313366676
  Netanel Avraham 207544131
*/
class GameController {
    
    // ---------- fields -----------
    field SpaceShip spaceShip;
    field AsteroidsController asteroids;
    field MissilesController missiles;
    field int printSatrCounter, score;

    // --------- constructor -----------
    constructor GameController new () {
        let spaceShip = SpaceShip.new();
        let asteroids = AsteroidsController.new();
        let missiles = MissilesController.new();
        let score = 0;

        let printSatrCounter = 0;
        do updateScore(0);
        return this;
    }

    // ------------ methods -------------
    /*
    run one game while not game over
    move the spaceShip left or right
    if space prased shot new missil
    and do more things
    */
    method int run () {
        var boolean gameOver;
        var int randomNum;

        let gameOver = false;

        while(~gameOver){
            let randomNum= Random.between(0,1000);
            if(Keyboard.keyPressed() = 130) {
                do spaceShip.moveLeft();
            }
            if(Keyboard.keyPressed() = 132) {
                do spaceShip.moveRight();
            }
            if(Keyboard.keyPressed() = 32) {
                do missiles.shoot(spaceShip);
            }
            // create new asteroid (if randNum > 990)
            do asteroids.newAsteroid(randomNum);

            //move all the asteroids
            do asteroids.moveAsteroids();

            //move all the missiles
            do missiles.moveMissiles();

            // check if some missile hit some asteroid
            do checkMissilesHit();

            // check if some asteroid hit the space ship if true its game over
            if (checkSpaceShipHit()){
                let gameOver = true;
            }
            let printSatrCounter = printSatrCounter + 1;

            if (printSatrCounter = 500){
            // print some star because they erase by the asteroids
                do printStar();
                let printSatrCounter = 0;
            }
        }
        return score;
    }

    /*
    print star (pixel) in a random place on the screen
    */
    method void printStar () {
        var int x, y;
        let x = Random.between(0, 512);
        let y = Random.between(0, 256);
        do Screen.setColor(false);
        do Screen.drawPixel(x, y);
        return;
    }

    /*
    check if some missile hit some asteroid if true remove the missile and update score
    */
    method void checkMissilesHit () {
        var int i;
        var Missile _missile;
        let i = 0;
        while (i < missiles.length()) {
            if (~(missiles.at(i) = null)){
                let _missile = missiles.at(i);
                if (asteroids.hit(_missile.x(), _missile.y())) {
                    do missiles.remove(i);
                    do updateScore(Random.between(5,15));
                }
            }
            let i = i + 1;
        }
        return;
    }

    /*
    check if some asteroid hit the space ship
    */
    method boolean checkSpaceShipHit () {
        return asteroids.hit(spaceShip.x(), spaceShip.y());
    }

    /*
    update the score by the given number of points
    */
    method void updateScore (int points) {
        let score = score + points;
        do Output.moveCursor(0, 0);
        do Output.printString("score: ");
        do Output.printInt(score);
        return;
    }

    /*
    dispose the controllers, spaceship and memory
    */
    method void dispose () {
        do asteroids.dispose();
        do missiles.dispose();
        do spaceShip.dispose();
        do Memory.deAlloc(this);
        return;
    }
}
